[
  {
    "ContainingType": "ThomasCRUD.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ThomasCRUD.DTOs.Auth.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ThomasCRUD.DTOs.Auth.CadastrarDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.ClienteController",
    "Method": "GetAll",
    "RelativePath": "api/Cliente",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.ClienteController",
    "Method": "Create",
    "RelativePath": "api/Cliente",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "clienteDto",
        "Type": "ThomasCRUD.DTOs.Clientes.ClienteCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.ClienteController",
    "Method": "GetById",
    "RelativePath": "api/Cliente/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.ClienteController",
    "Method": "Update",
    "RelativePath": "api/Cliente/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "clienteDto",
        "Type": "ThomasCRUD.DTOs.Clientes.ClienteUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.ClienteController",
    "Method": "Delete",
    "RelativePath": "api/Cliente/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.LogradouroController",
    "Method": "GetAll",
    "RelativePath": "api/Logradouro",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.LogradouroController",
    "Method": "Create",
    "RelativePath": "api/Logradouro",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "logradouroDto",
        "Type": "ThomasCRUD.DTOs.Logradouros.LogradouroCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.LogradouroController",
    "Method": "GetById",
    "RelativePath": "api/Logradouro/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.LogradouroController",
    "Method": "Update",
    "RelativePath": "api/Logradouro/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "logradouroDto",
        "Type": "ThomasCRUD.DTOs.Logradouros.LogradouroCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "ThomasCRUD.Controllers.LogradouroController",
    "Method": "Delete",
    "RelativePath": "api/Logradouro/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]